<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>ecc_agent_property</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition table="ecc_agent_property">valueVALCHANGES^ORnameVALCHANGES^ORecc_agentVALCHANGES^ORsys_domainVALCHANGES^EQ<item endquery="false" field="value" goto="false" newquery="false" operator="VALCHANGES" or="false" value=""/>
            <item endquery="false" field="name" goto="false" newquery="false" operator="VALCHANGES" or="true" value=""/>
            <item endquery="false" field="ecc_agent" goto="false" newquery="false" operator="VALCHANGES" or="true" value=""/>
            <item endquery="false" field="sys_domain" goto="false" newquery="false" operator="VALCHANGES" or="true" value=""/>
            <item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/>
        </filter_condition>
        <is_rest>false</is_rest>
        <message/>
        <name>MID property check</name>
        <order>200</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /* null when async */ ) {
	validatePropertyValue();
	checkDuplicateProperty();
	
	function validatePropertyValue() {
		// If any field other than value is updated no need to validate the property value
		if (current.operation() == 'update' && !current.value.changes())
			return;
		
		// Value cannot be empty or null
		if (current.value == null || current.value == "") {
			gs.addErrorMessage(gs.getMessage("Value cannot be empty or null."));
			current.setAbortAction(true);
		}
		
		// *** Validate property value if property is a known non-legacy MIDConfigParameter name
		var mcp = SncMIDConfigParameter;
		var param = mcp.byName(current.name);
		if (param) {
			try {
				param.parseAndValidateValue(current.value); // Ignore return value, throws exception if value is invalid
			} catch (e) {
				var valMsg = gs.getMessage("Invalid value: {0}", e.getMessage() != null ? e.getMessage() + '' : e + '');
				gs.addErrorMessage(valMsg);
				current.setAbortAction(true);
			}
		}
	}

	function checkDuplicateProperty() {
		// *** Check for duplicate property record in all visible domains
	
		// No need to check for the duplicate record if the updated field is not property name or MID Server or the domain
		if (current.operation() == 'update' && 
				!(current.name.changes() || current.ecc_agent.changes() || current.sys_domain.changes()))
			return;
		
		var isDomainSeparated = gs.getProperty("glide.sys.domain.use_record_domain_for_processes") == 'true';
		var gr = new GlideRecord('ecc_agent_property');
		gr.addQuery('name', current.name);
		gr.addQuery('ecc_agent', current.ecc_agent);
		if (isDomainSeparated) {

			// Since we cannot have addQuery for domain, and we query based on the name and assigned Mid Server
			// If we update the record and we only change the domain, the updated record is in the result of 
			// query and we need to exclude it
			if (current.operation() == 'update' && current.sys_domain.changes()) {
				gr.addQuery('sys_id', '!=', current.sys_id + '');
			}

			// Make sure we don't count the override record as duplicate
			// Since the business rule is running before insert/update, the override record is still visible
			// After inserting the record with 'sys_overrides, the parent record is not visible to child domain
			if(current.sys_overrides) {
				gr.addQuery('sys_id', '!=', current.sys_overrides + '');
			}
			gr.addDomainQuery(current.sys_domain + '');
			
		}
		gr.query();
		
		if (!gr.hasNext())
			return;

		gs.addErrorMessage(gs.getMessage('Cannot create a duplicate MID server property record'));
		if (isDomainSeparated) {
			gs.warning('Check for duplicate name + ecc_agent in all accessible domains on ecc_agent_property found duplicate record');
		} else {
			gs.warning('Check for duplicate name + ecc_agent on ecc_agent_property found duplicate record');
		}
		current.setAbortAction(true);
	}

}(current, previous));]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2022-09-07 20:59:27</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path/>
        <sys_id>1d36b2a5c7311110917cfe665cc260b8</sys_id>
        <sys_mod_count>20</sys_mod_count>
        <sys_name>MID property check</sys_name>
        <sys_overrides/>
        <sys_package display_value="MID Server" source="com.glideapp.agent">aaa45334d0c322105590fd9a5a77e7f8</sys_package>
        <sys_policy/>
        <sys_scope display_value="Global Customizations - Upgrade Plan">f90ff3ea47ecb2105dc6f19f016d43cb</sys_scope>
        <sys_update_name>sys_script_1d36b2a5c7311110917cfe665cc260b8</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2025-10-16 02:32:06</sys_updated_on>
        <template/>
        <when>before</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=1d36b2a5c7311110917cfe665cc260b8"/>
    <sys_claim action="INSERT_OR_UPDATE">
        <claim_owner_scope display_value="Global Customizations - Upgrade Plan">f90ff3ea47ecb2105dc6f19f016d43cb</claim_owner_scope>
        <claim_timestamp>199eadc3e1e0000002</claim_timestamp>
        <metadata_update_name>sys_script_1d36b2a5c7311110917cfe665cc260b8</metadata_update_name>
        <previous_claim_app_version>1.0.0</previous_claim_app_version>
        <previous_claim_name>Global Customizations - Upgrade Plan</previous_claim_name>
        <previous_claim_scope>f90ff3ea47ecb2105dc6f19f016d43cb</previous_claim_scope>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2025-10-16 02:32:06</sys_created_on>
        <sys_id>ad2f332e47ecb2105dc6f19f016d4360</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2025-10-16 02:32:06</sys_updated_on>
    </sys_claim>
    <sys_claim action="INSERT_OR_UPDATE">
        <claim_owner_scope display_value="Global Customizations - Upgrade Plan">f90ff3ea47ecb2105dc6f19f016d43cb</claim_owner_scope>
        <claim_timestamp>199eadc3e1e0000001</claim_timestamp>
        <metadata_update_name>sys_script_1d36b2a5c7311110917cfe665cc260b8</metadata_update_name>
        <previous_claim_app_version/>
        <previous_claim_name>com.glideapp.agent</previous_claim_name>
        <previous_claim_scope>com.glideapp.agent</previous_claim_scope>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2025-10-16 02:32:06</sys_created_on>
        <sys_id>612f332e47ecb2105dc6f19f016d4361</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2025-10-16 02:32:06</sys_updated_on>
    </sys_claim>
</record_update>
